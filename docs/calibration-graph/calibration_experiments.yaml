# edit: neo15

experiments:
  - name: RO line spectroscopy
    id: ro-roline-spec
    measure_type: ensemble_avg
    stage: RO_resonator
    assumptions: |
      Chip is connected and readout line is accessible.
    sweep:
      - readout frequency
    monitor:
      - readout signal strength
    procedure: |
      - Sweep the readout frequency across a predefined range while monitoring the readout signal strength.
      - Optionally adjust the coupler bias or readout signal power to improve signal clarity.
      - Identify peaks in the response amplitude to locate resonances.
    post_operations: |
      Label each peak with the corresponding resonator according to the manufacturer's design.

  - name: RO resonator spectroscopy
    id: ro-resonator-spec
    measure_type: ensemble_avg
    stage: RO_resonator
    assumptions: |
      Already know the approximate value of the readout resonator's frequency.
    sweep:
      - readout frequency
      - Z-line bias
    monitor:
      - readout signal amplitude
      - readout signal phase
    procedure: |
      - Apply a microwave pulse to the readout resonator
      - Pad the readout signal with a vairable Z-line bias
      - Sweep the readout frequency around the approximate resonator frequency
      - Sweep the Z-line bias to find the flux insensitive point
    post_operations: |
      Update drive frequency
      Update Z-line bias

  - name: Qubit f01 spectroscopy
    id: f01-spec
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Readout frequency is calibrated; qubit is properly biased.
    sweep:
      - drive amplitude
      - Z-line bias
    monitor:
      - readout signal strength
    procedure: |
      - Pick a desired drive frequency in the tunable band
      - Pad the drive pulse with a variable Z-line bias
      - Apply a readout signal to the resonator
      - Sweep the drive amplitude and Z-line bias
      - Monitor the readout signal strength
    post_operations: |
      Update the Z-line bias to align with the desired drive frequency

  - name: Rabi for drive amplitude
    id: rabi-amp
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Qubit transition frequency is assured by the updated Z-line bias.
    sweep:
      - drive pulse amplitude
    monitor:
      - readout signal strength
    procedure: |
      - Drive the qubit with pulses of varying amplitudes
      - Apply DRAG correction to the drive pulse
      - Apply a readout signal to the resonator
      - Observe oscillations in the strength to determine the optimal π-pulse amplitude.
    post_operations: |
      Update the π-pulse amplitude in the registry
      Update the π/2-pulse amplitude in the registry

  - name: RO frequency
    id: ro-freq
    measure_type: ensemble_avg
    stage: RO_resonator
    assumptions: |
      We can drive the qubit to |1⟩ state with high fidelity
    sweep:
      - readout frequency
    monitor:
      - SNR
    procedure: |
      - Apply a trivial pulse or a π-pulse to the qubit, respectively
      - Measure the readout signal strength
      - Calculate the SNR
      - Sweep the readout frequency
      - Select the readout frequency with the highest SNR as operating frequency
    post_operations: |
      Update the readout frequency in the registry

  - name: RO amplitude
    id: ro-amp
    measure_type: single_shot
    stage: RO_resonator
    assumptions: |
      Readout frequency is already set for maximal SNR
    procedure: |
      - Apply a trivial pulse or a π-pulse to the qubit, respectively
      - Measure the readout signal strength
      - Plot the state population as a function of the readout amplitude
      - Select the readout amplitude with best readout
      - Perform a clustering analysis to separate the |0⟩ and |1⟩ states with the optimal readout amplitude
    post_operations: |
      - Update the readout amplitude in the registry
      - Update the I/Q center and readout matrix in the registry.

  - name: Ramsey
    id: ramsey
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      - We have π-pulses and we use half its amplitude for π/2-pulses
      - We can distinguish |0⟩, |1⟩ and higher states
    sweep:
      - delay between π/2 pulses
    monitor:
      - "|0⟩ state population"
    procedure: |
      - Apply two π/2 pulses separated by a variable delay to the qubit.
      - Add a phase shift f_fringe*delay to the second pulse create a fringe pattern (shift the frame by f_fringe) for better observation
      - Monitor the oscillations in the qubit population
      - Perform a curve fit and/or a FT to extract the observed frequency
      - Compare with f_fringe to calibrate the qubit frequency
    post_operations: |
      - Update the qubit frequency

  - name: Qubit f12 spectroscopy
    goal: |
      To find the DRAG parameter, we must know the anharmonicity, or f12
    id: f12-spec
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Qubit is calibrated up to |1⟩ state; sufficient anharmonicity.
    sweep:
      - drive frequency of |1⟩→|2⟩
    monitor:
      - population in |1⟩ or dispersive shift
    procedure: |
      - Drive |0⟩→|1⟩, then |1⟩→|2⟩ with variable frequency, then |2⟩→|1⟩, then readout
      - Sweep the drive frequency of the |1⟩→|2⟩
      - Monitor the population in the |1⟩ state or the dispersive shift to locate the transition.
      - Calculate the DRAG parameter using the anharmonicity
    post_operations: |
      Update the f12 in the registry.
      Update the DRAG parameter in the registry.

  - name: Pulse detuning
    goal: |
      To compensate the phase error due to |1⟩-|2⟩ coupling, we need a detuning on the drive frequency
    id: pulse-detuning
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Anharmonicity or f12 is calibrated.
    sweep:
      - drive frequency detuning
    monitor:
      - population in |0⟩ state
    procedure: |
      - Apply multiple π-pulse and -π-pulse pairs with a variable detuning
      - Measure the population in |0⟩ and |1⟩ states
      - Find the optimal detuning that maximizes the population in |0⟩ state
    post_operations: |
      Update the drive frequency in the registry.

  - name: π-pulse amplitude
    id: pi-amp
    measure_type: single_shot
    stage: qubit
    assumptions: |
      Qubit frequency and pulse detuning are calibrated
    sweep:
      - drive pulse amplitude
    monitor:
      - population in |0⟩ state
    procedure: |
      - Apply an even number of π-pulses with a variable amplitude
      - Sweep the amplitude to find the optimum
      - Measure the population in |0⟩ and |1⟩ states
    post_operations: |
      Update the π-pulse fidelity metrics in the registry.

  - name: π/2-pulse amplitude
    id: halfpi-amp
    measure_type: single_shot
    stage: qubit
    assumptions: |
      Qubit frequency and pulse detuning are calibrated
    sweep:
      - drive pulse amplitude
    monitor:
      - population in |0⟩ state
    procedure: |
      - Apply multiple π/2-pulses with a variable amplitude
      - Sweep the amplitude to find the optimum
      - Measure the population in |0⟩ and |1⟩ states
    post_operations: |
      Update the π/2-pulse fidelity metrics in the registry.

  - name: XY-Z timing
    goal: |
      Make sure the XY and Z drives are synchronized
    id: xy-z-timing
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      XY drive and Z drive are calibrated.
    sweep:
      - Z (or XY) pulse timing
    monitor:
      - population in |0⟩ state
    procedure: |
      - Apply a π-pulse
      - Apply a flattop detuning with equal length but variable starting time
      - Measure the population in |0⟩
      - Record the timing that maximizes the population in |0⟩
    post_operations: |
      Update the Z (or XY) timing in the registry.

  - name: Z-bias map
    goal: |
      Find the mapping from Z-line bias to the qubit frequency
    id: z-bias-map
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Qubit frequency and pulse detuning are calibrated.
    sweep:
      - Z-line bias
    monitor:
      - "|0⟩ state population"
    procedure: |
      - Apply a readout signal to the resonator
      - Sweep the Z-line bias to find the flux insensitive point
      - Measure the readout signal strength
    post_operations: |
      Update the Z-line bias in the registry.
  
  - name: 1qb benchmarking
    id: 1qb-bench
    measure_type: ensemble_avg
    stage: qubit

  - name: Leakage suppresion
    id: leakage-suppression
    measure_type: ensemble_avg
    stage: qubit
    assumptions: |
      Qubit frequency and pulse detuning are calibrated.
    sweep:
      - DRAG coefficient
      - drive pulse detuningα
    monitor:
      - population in |0⟩ state
    procedure: |
      - For each $\alpha$, optimize detuning to get best RB fidelity
      - Now that fidelity is independent from $\alpha$, optimize $\alpha$ for leakage
    post_operations: |
      Update the π-pulse fidelity metrics in the registry.

  - name: Flux pre-distortion
    id: flux-pre-distortion
    measure_type: optimization
    stage: two-qubit
    assumptions: |
      Each qubit is calibrated for single-qubit operations.
    objective: |
      Minimize the diffrence between estimated phase drift and actual phase drift
    procedure: |
      - Model the transfer function
      - Minimize the difference (See note)
   
  - name: Multi-qubit timing
    id: multi-qubit-timing
    measure_type: ensemble_avg
    stage: two-qubit
    assumptions: |
      Each qubit is calibrated for single-qubit operations.
    sweep:
      - relative timing of the qB drive
    monitor:
      - population in |0⟩ state of two qubits
    procedure: |
      - Apply π pulse to qA
      - Apply a flattop detuning to both qubits to bring them on resonance
      - Vary the timing of the qB

  - name: Flux crosstalk
    id: flux-crosstalk
    measure_type: ensemble_avg
    stage: two-qubit
    sweep:
      - Z-line bias of the target qubit
    monitor:
      - population in |0⟩ state of the target qubit

graph:
  ro-roline-spec: [ro-resonator-spec]
  ro-resonator-spec: [f01-spec]
  f01-spec: [rabi-amp]
  rabi-amp: [ro-freq]
  ro-freq: [ro-amp]
  ro-amp: [ramsey]
  ramsey: [f12-spec]
  f12-spec: [pulse-detuning]
  pulse-detuning: [pi-amp]
  pi-amp: [halfpi-amp]
  halfpi-amp: [xy-z-timing]
  xy-z-timing: [z-bias-map]
  z-bias-map: [1qb-bench]
  1qb-bench: [leakage-suppression]
  leakage-suppression: [flux-pre-distortion]
  flux-pre-distortion: [multi-qubit-timing]
  multi-qubit-timing: [flux-crosstalk]
